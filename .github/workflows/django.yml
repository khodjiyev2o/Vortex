name: Vortex CI/CD

on:
  push:
      branches: [main]
env:
    DOCKER_IMAGE: ghcr.io/${{ github.actor }}/vortex-api
    VERSION: ${{ github.sha }}
    NAME: mint
jobs:
  testing:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.8]
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: 'Create env file'
      run: |
          echo "${{ secrets.ENV_FILE }}" >> .env
    - name: Run Tests
      run: |
        python manage.py test
  build:
      needs: testing
      runs-on: ubuntu-latest
      steps:
        # github repository checkout
        - uses: actions/checkout@v2
        - name: 'Create env file'
          run: |
            echo "${{ secrets.ENV_FILE }}" >> .env
        # docker build 
        - name: docker login
          run: |
            docker login -u ${{ github.actor }} -p ${{secrets.DOCKER_PASSWORD}}
        - name: Build the Docker image for main branch
          run: docker build . --file Dockerfile --tag ${{ github.ACTOR }}/vortex:latest
      
        - name: Docker Push for main branch
          run: docker push ${{ secrets.ACTOR }}/vortex:latest
      
           

    #  Job
  # deploy:
  #     needs: build 
  #     name: Deploy
  #     runs-on: ${{ github.ref }} # AWS ./configure
  #     steps:
  #         - name: Login to ghcr
  #           uses: docker/login-action@v1
  #           with:
  #             registry: ghcr.io
  #             username: ${{ github.ACTOR }}
  #             password: ${{ secrets.GHCR_TOKEN }}
  #         # 8000 -> 80 
  #         - name: Docker run in main branch
  #           run: |
  #             docker stop ${{ env.NAME }} && docker rm ${{ env.NAME }} && docker rmi ${{ secrets.ACTOR }}/mint-api:latest
  #             docker run -d -t -i \
  #             -p 80:8000 \
  #             --name mint ${{ secrets.ACTOR }}/mint-api:latest